{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["adjectives","nouns","App","useState","message","setMessage","console","log","className","type","id","onClick","e","preventDefault","Math","floor","random","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,I,YCGTA,EAAa,CAAC,QAAS,QAAS,WAAY,QAAS,UAAW,SAAU,UAAW,QAAS,WAAY,UAC1GC,EAAQ,CAAC,SAAU,YAAa,YAAa,YAAa,OAAQ,OAAQ,OAAQ,WAAY,UAAW,QAgB/G,IAoBeC,EApBH,WAAO,IAAD,EACcC,qBADd,mBACTC,EADS,KACAC,EADA,KAQhB,OAFFC,QAAQC,IAAIH,EAAS,WAGjB,qBAAKI,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACA,wBAAQC,KAAK,SAASC,GAAG,SAASC,QATlB,SAACC,GACnBA,EAAEC,iBACFR,EARM,oCAAN,OAROL,EAAYc,KAAKC,MAAMD,KAAKE,SAAWhB,EAAWiB,SAQM,IAHxDhB,EAAOa,KAAKC,MAAMD,KAAKE,SAAWf,EAAMgB,SAG/C,OAeE,4CACA,4BACGb,UCrBMc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.afdfb209.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nconst adjectives = [\"Lilac\", \"Scary\", \"Enormous\", \"Blind\", \"Hopeful\", \"Warped\", \"Vintage\", \"Great\", \"Terrible\", \"Dental\"]\nconst nouns = [\"Octopi\", \"Happiness\", \"Shrubbery\", \"Bracelets\", \"Code\", \"Soap\", \"Cans\", \"Messages\", \"Lighter\", \"Bass\"]\nfunction GenerateBandName() {\n\n  function randomAjective() {\n    return adjectives[(Math.floor(Math.random() * adjectives.length))]\n\n}\n\nfunction randomNoun() {\n    return nouns[(Math.floor(Math.random() * nouns.length))]\n\n}\n    return `Hey, we should call the band The ${randomAjective() +  ' ' + randomNoun()}.`\n}\n\n\nconst App = () => {\n  const [message, setMessage] = useState()\n  const handleClick = (e) => {\n    e.preventDefault()\n    setMessage(GenerateBandName())\n  } \nconsole.log(message, 'message')\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <button type=\"button\" id=\"button\" onClick={handleClick} > What should we call the band?</button>\n      <p>\n        {message}\n      </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}