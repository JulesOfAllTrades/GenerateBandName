{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["adjectives","nouns","App","useState","message","setMessage","console","log","className","type","id","onClick","e","preventDefault","Math","floor","random","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAGMA,EAAa,CAAC,QAAS,QAAS,WAAY,QAAS,UAAW,SAAU,UAAW,QAAS,WAAY,SAAU,SAAU,SAAU,SAC1H,gBAAiB,SAAU,SAAU,MAAO,iBAAkB,WAAY,QAAS,cAAe,YAAa,OAAQ,SAAU,cAAe,SAC9JC,EAAQ,CAAC,SAAU,YAAa,YAAa,YAAa,OAAQ,OAAQ,OAAQ,WAAY,UAAW,OAAQ,UAAW,SAAU,QAAS,QAAS,WAC9I,OAAQ,UAAW,OAAQ,YAAa,eAAgB,WAAY,QAAS,OAAQ,SAAU,SAAU,WAAY,YAAa,SAgBlJ,IAoBeC,EApBH,WAAO,IAAD,EACcC,qBADd,mBACTC,EADS,KACAC,EADA,KAQhB,OAFFC,QAAQC,IAAIH,EAAS,WAGjB,qBAAKI,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACA,wBAAQA,UAAU,aAAaC,KAAK,SAASC,GAAG,SAASC,QATzC,SAACC,GACnBA,EAAEC,iBACFR,EARM,oCAAN,OAROL,EAAYc,KAAKC,MAAMD,KAAKE,SAAWhB,EAAWiB,SAQM,IAHxDhB,EAAOa,KAAKC,MAAMD,KAAKE,SAAWf,EAAMgB,SAG/C,OAeE,4CACA,mBAAGT,UAAU,cAAb,SACGJ,UCvBMc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.049ec065.chunk.js","sourcesContent":["\nimport { useState } from 'react';\nimport './App.css';\nconst adjectives = [\"Lilac\", \"Scary\", \"Enormous\", \"Blind\", \"Hopeful\", \"Warped\", \"Vintage\", \"Great\", \"Terrible\", \"Dental\", \"Filthy\", \"Brainy\", \"Cosmic\", \n                    \"Discretionary\", \"Slushy\", \"Opaque\", \"Wet\", \"Conspiratorial\", \"Aluminum\", \"Brave\", \"Heartbroken\", \"Miserable\", \"Holy\", \"Plucky\", \"Sympathetic\", \"Brass\"] \nconst nouns = [\"Octopi\", \"Happiness\", \"Shrubbery\", \"Bracelets\", \"Code\", \"Soap\", \"Cans\", \"Messages\", \"Lighter\", \"Bass\", \"Puppies\", \"Courts\", \"Pages\", \"Gasps\", \"Pendulum\",\n                \"Film\", \"Bigfoot\", \"Sons\", \"Stopwatch\", \"Cartographer\", \"Plothole\", \"Error\", \"Bass\", \"Bottle\", \"Engine\", \"Landmine\", \"Sumbarine\", \"Drugs\"]\nfunction GenerateBandName() {\n\n  function randomAjective() {\n    return adjectives[(Math.floor(Math.random() * adjectives.length))]\n\n}\n\nfunction randomNoun() {\n    return nouns[(Math.floor(Math.random() * nouns.length))]\n\n}\n    return `Hey, we should call the band The ${randomAjective() +  ' ' + randomNoun()}.`\n}\n\n\nconst App = () => {\n  const [message, setMessage] = useState()\n  const handleClick = (e) => {\n    e.preventDefault()\n    setMessage(GenerateBandName())\n  } \nconsole.log(message, 'message')\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <button className=\"App-button\" type=\"button\" id=\"button\" onClick={handleClick} > What should we call the band?</button>\n      <p className=\"App-message\">\n        {message}\n      </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}